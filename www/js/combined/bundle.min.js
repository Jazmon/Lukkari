"use strict";var lukkariApp=angular.module("lukkari",["ionic","lukkari.controllers","lukkari.services","ionic-datepicker"]);lukkariApp.run(["$ionicPlatform",function($ionicPlatform){$ionicPlatform.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault()})}]),lukkariApp.constant("ApiEndpoint",{url:"http://localhost:8100/api"}),lukkariApp.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("app",{url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"LukkariCtrl"}).state("app.search",{url:"/search",views:{menuContent:{templateUrl:"templates/search.html",controller:"SearchCtrl"}}}).state("app.settings",{url:"/settings",views:{menuContent:{templateUrl:"templates/settings.html",controller:"SettingsCtrl"}}}).state("app.todayAppointment",{url:"/today/:id",views:{menuContent:{templateUrl:"templates/appointment.html",controller:"AppointmentCtrl"}}}).state("app.today",{url:"/today",views:{menuContent:{templateUrl:"templates/today.html",controller:"TodayCtrl"}}}).state("app.appointment",{url:"/week/:id",views:{menuContent:{templateUrl:"templates/appointment.html",controller:"AppointmentCtrl"}}}).state("app.week",{url:"/week",views:{menuContent:{templateUrl:"templates/week.html",controller:"WeekCtrl"}}}),$urlRouterProvider.otherwise("/app/today")}]);var lukkariControllers=angular.module("lukkari.controllers",["ngCordova"]);lukkariControllers.controller("LukkariCtrl",[function($scope){}]),lukkariControllers.controller("TodayCtrl",["$scope","$ionicLoading","LocalStorage","$ionicModal","MyDate",function($scope,$ionicLoading,LocalStorage,$ionicModal,MyDate){$scope.groupInfo={},$scope.groupInfo.group=LocalStorage.get("groupName"),$scope.dayOffset=0,$scope.currentDay="Today",$ionicModal.fromTemplateUrl("templates/newgroup.html",{scope:$scope}).then(function(modal){$scope.modal=modal,$scope.groupInfo.group||$scope.modal.show()}),$scope.closeGroupName=function(){$scope.modal.hide()},$scope.setGroup=function(){LocalStorage.set("groupName",$scope.groupInfo.group),$scope.modal.hide()},$scope.appointments=[],void 0!==$scope.groupInfo.group,$scope.moveDay=function(direction){if(-1===direction)$scope.dayOffset-=1;else{if(1!==direction)throw new RangeError("Parameter out of range! Please use 1 or -1");$scope.dayOffset+=1}var date=MyDate.getDayFromToday($scope.dayOffset);$scope.currentDay=MyDate.getLocaleDate(date,!1),$scope.appointments=[]}}]),lukkariControllers.controller("AppointmentCtrl",["$scope","$ionicLoading","$stateParams",function($scope,$ionicLoading,$stateParams){}]),lukkariControllers.controller("WeekCtrl",["$scope","$ionicLoading","$ionicModal","LocalStorage","MyDate","Lessons",function($scope,$ionicLoading,$ionicModal,LocalStorage,MyDate,Lessons){function getAppointments(){}$scope.groupInfo={},$scope.week={},$scope.weekOffset=0,$scope.groupInfo.group=LocalStorage.get("groupName"),$scope.groupInfo.group||$ionicModal.fromTemplateUrl("templates/newgroup.html",{scope:$scope}).then(function(modal){$scope.modal=modal,$scope.modal.show()}),$scope.closeGroupName=function(){$scope.modal.hide()},Lessons.get($scope.groupInfo.group,function(lessons){lessons.hasOwnProperty("success")&&lessons.success!==!1?console.log("FAILED"):$scope.lessons=lessons}),$scope.setGroup=function(){LocalStorage.set("groupName",$scope.groupInfo.group),$scope.modal.hide(),getAppointments()},$scope.appointments=[],void 0!==$scope.groupInfo.group&&getAppointments(),$scope.moveWeek=function(direction){$scope.weekOffset+=direction,getAppointments()}}]),lukkariControllers.controller("SettingsCtrl",["$scope","LocalStorage","$cordovaToast","$ionicPlatform","$cookies","$timeout","$cordovaCalendar",function($scope,LocalStorage,$cordovaToast,$ionicPlatform,$cookies,$timeout,$cordovaCalendar){function datePickerCallback(val){"undefined"==typeof val?console.log("No date selected"):(console.log("Selected date is : ",val),$scope.reminder.startDay=val)}$scope.groupInfo={},$scope.reminder={},$scope.reminder.startDay=new Date,$scope.reminder.weeks=1;var toastOptions={duration:"long",position:"center"};$scope.datepickerObject={titleLabel:"Select Date",todayLabel:"Today",closeLabel:"Close",setLabel:"Set",setButtonType:"button-positive",todayButtonType:"button-stable",closeButtonType:"button-stable",inputDate:new Date,mondayFirst:!0,templateType:"popup",showTodayButton:"true",modalHeaderColor:"bar-stable",modalFooterColor:"bar-stable",from:new Date,callback:function(val){datePickerCallback(val)},dateFormat:"dd-MM-yyyy",closeOnSelect:!1},$scope.reminder.time="null",$scope.groupInfo.group=LocalStorage.get("groupName"),$scope.groupInfo.group||($scope.groupInfo.group=""),$scope.changeGroup=function(){LocalStorage.set("groupName",$scope.groupInfo.group),$ionicPlatform.ready(function(){try{$cordovaToast.show("Group successfully changed!",toastOptions.duration,toastOptions.position).then(function(success){$cookies.remove("PHPSESSID")})}catch(e){}finally{$timeout(function(){window.location.href="#/app/today"},2e3)}})},$scope.addToCalendar=function(){var calOptions={};calOptions.calendarName="Lukkari app calendar",calOptions.calendarId=1,"null"!==$scope.reminder.time?calOptions.firstReminderMinutes=$scope.reminder.time:calOptions.firstReminderMinutes=null,calOptions.secondReminderMinutes=null;var success=!0;console.log("$scope.reminder.weeks: "+$scope.reminder.weeks),console.log("$scope.reminder.startDay: "+$scope.reminder.startDay);for(var i=1;i<$scope.reminder.weeks;i++);success?$cordovaToast.show("Calendar events successfully added!",toastOptions.duration,toastOptions.position):$cordovaToast.show("Failed to add calendar events!",toastOptions.duration,toastOptions.position)}}]),lukkariControllers.controller("SearchCtrl",["$scope","LocalStorage",function($scope,LocalStorage){}]);var lukkariServices=angular.module("lukkari.services",[]);lukkariServices.factory("LocalStorage",[function(){function get(name){return window.localStorage.getItem(name)}function set(name,value){return window.localStorage.setItem(name,value)}return{get:get,set:set}}]),lukkariServices.factory("MyDate",[function(){function getMonday(d){d=new Date(d);var day=d.getDay(),diff=d.getDate()-day+(0===day?-6:1);return new Date(d.setDate(diff))}function formatDay(day,years){var dayString="";return dayString+=day.getDate(),dayString+=".",dayString+=day.getMonth()+1,"boolean"==typeof years&&years&&(dayString+=".",dayString+=day.getFullYear()),dayString}function getLocaleDate(day,years){var options={month:"numeric",day:"numeric"};return"boolean"==typeof years&&years&&(options.year="numeric"),new Intl.DateTimeFormat("fi-FI",options).format(day)}function getDayFromDay(currentDay,offsetDays){var day=currentDay.getTime();day+=offsetDays*DAY_IN_MILLISECONDS;var date=new Date;return date.setTime(day),date}function getDayFromToday(offsetDays){var day=Date.now();return day+=offsetDays*DAY_IN_MILLISECONDS,new Date(day)}var DAY_IN_MILLISECONDS=864e5;return{getMonday:getMonday,formatDay:formatDay,getDayFromToday:getDayFromToday,getLocaleDate:getLocaleDate,getDayFromDay:getDayFromDay}}]),lukkariServices.factory("Lessons",["$http","ApiEndpoint",function($http,ApiEndpoint){function get(groupName,callback){if(savedGroupName===groupName)callback(lessons);else{savedGroupName=groupName;var data={studentGroup:[groupName.toUpperCase()]},apiKey="Wu47zzKEPa7agvin47f5",url=ApiEndpoint.url+"/reservation/search?apiKey="+apiKey;$http({method:"POST",url:url,data:data,withCredentials:!0,headers:{authorization:"Basic V3U0N3p6S0VQYTdhZ3ZpbjQ3ZjU6","accept-language":"fi","content-type":"application/json","cache-control":"no-cache"}}).success(function(data,status,headers,config){console.log(data.reservations),callback(data.reservations)}).error(function(data,status,headers,config){callback({success:!1})})}}var lessons=[],savedGroupName="";return{get:get}}]);