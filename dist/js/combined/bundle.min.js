"use strict";var lukkariApp=angular.module("lukkari",["ionic","lukkari.controllers","lukkari.services","lukkari.directives","ionic-datepicker"]);lukkariApp.run(["$ionicPlatform",function($ionicPlatform){$ionicPlatform.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault()})}]),lukkariApp.constant("ApiEndpoint",{url:"http://localhost:8100/api"}),lukkariApp.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("app",{url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"LukkariCtrl"}).state("app.search",{url:"/search",views:{menuContent:{templateUrl:"templates/search.html",controller:"SearchCtrl"}}}).state("app.settings",{url:"/settings",views:{menuContent:{templateUrl:"templates/settings.html",controller:"SettingsCtrl"}}}).state("app.todayAppointment",{url:"/today/:id",views:{menuContent:{templateUrl:"templates/appointment.html",controller:"AppointmentCtrl"}}}).state("app.today",{url:"/today",views:{menuContent:{templateUrl:"templates/today.html",controller:"TodayCtrl"}}}).state("app.appointment",{url:"/week/:id",views:{menuContent:{templateUrl:"templates/appointment.html",controller:"AppointmentCtrl"}}}).state("app.week",{url:"/week",views:{menuContent:{templateUrl:"templates/week.html",controller:"WeekCtrl"}}}),$urlRouterProvider.otherwise("/app/today")}]);var lukkariControllers=angular.module("lukkari.controllers",["ngCordova"]);lukkariControllers.controller("LukkariCtrl",[function($scope){}]),lukkariControllers.controller("TodayCtrl",["$scope","$ionicLoading","LocalStorage","$ionicModal","MyDate","Lessons",function($scope,$ionicLoading,LocalStorage,$ionicModal,MyDate,Lessons){$scope.groupInfo={},$scope.groupInfo.group=LocalStorage.get("groupName"),$scope.dayOffset=0,$scope.currentDay=new Date,$ionicModal.fromTemplateUrl("templates/newgroup.html",{scope:$scope}).then(function(modal){$scope.modal=modal,$scope.groupInfo.group||$scope.modal.show()}),$scope.closeGroupName=function(){$scope.modal.hide()},$scope.setGroup=function(){LocalStorage.set("groupName",$scope.groupInfo.group),$scope.modal.hide(),$ionicLoading.show({template:"Loading..."}),Lessons.changeGroup({groupName:$scope.groupInfo.group,callback:function(success){success?(console.log("successfully changed group name"),Lessons.getDay({day:$scope.currentDay,callback:function(response){response.success?$scope.lessons=response.dayLessons:console.log("ERROR")}})):console.log("failed to change group name")}})},$scope.lessons=[],void 0!==$scope.groupInfo.group&&($ionicLoading.show({template:"Loading..."}),Lessons.changeGroup({groupName:$scope.groupInfo.group,callback:function(success){success?(console.log("successfully changed group name"),Lessons.getDay({day:$scope.currentDay,callback:function(response){$ionicLoading.hide(),response.success?$scope.lessons=response.dayLessons:console.log("ERROR")}})):console.log("failed to change group name")}})),$scope.moveDay=function(direction){$ionicLoading.show({template:"Loading..."}),$scope.currentDay=MyDate.getDayFromDay({currentDay:$scope.currentDay,offsetDays:direction}),Lessons.getDay({day:$scope.currentDay,callback:function(response){$ionicLoading.hide(),response.success?$scope.lessons=response.dayLessons:console.log("ERROR")}})}}]),lukkariControllers.controller("AppointmentCtrl",["$scope","$ionicLoading","$stateParams",function($scope,$ionicLoading,$stateParams){}]),lukkariControllers.controller("WeekCtrl",["$scope","$ionicLoading","$ionicModal","LocalStorage","MyDate","Lessons",function($scope,$ionicLoading,$ionicModal,LocalStorage,MyDate,Lessons){function getAppointments(){}$scope.groupInfo={},$scope.week={},$scope.weekOffset=0,$scope.groupInfo.group=LocalStorage.get("groupName"),$scope.groupInfo.group||$ionicModal.fromTemplateUrl("templates/newgroup.html",{scope:$scope}).then(function(modal){$scope.modal=modal,$scope.modal.show()}),$scope.closeGroupName=function(){$scope.modal.hide()},Lessons.get($scope.groupInfo.group,function(lessons){lessons.hasOwnProperty("success")&&lessons.success!==!1?console.log("FAILED"):$scope.lessons=lessons}),$scope.setGroup=function(){LocalStorage.set("groupName",$scope.groupInfo.group),$scope.modal.hide(),getAppointments()},$scope.appointments=[],void 0!==$scope.groupInfo.group&&getAppointments(),$scope.moveWeek=function(direction){$scope.weekOffset+=direction,getAppointments()}}]),lukkariControllers.controller("SettingsCtrl",["$scope","LocalStorage","$cordovaToast","$ionicPlatform","$cookies","$timeout","$cordovaCalendar",function($scope,LocalStorage,$cordovaToast,$ionicPlatform,$cookies,$timeout,$cordovaCalendar){function datePickerCallback(val){"undefined"==typeof val?console.log("No date selected"):(console.log("Selected date is : ",val),$scope.reminder.startDay=val)}$scope.groupInfo={},$scope.reminder={},$scope.reminder.startDay=new Date,$scope.reminder.weeks=1;var toastOptions={duration:"long",position:"center"};$scope.datepickerObject={titleLabel:"Select Date",todayLabel:"Today",closeLabel:"Close",setLabel:"Set",setButtonType:"button-positive",todayButtonType:"button-stable",closeButtonType:"button-stable",inputDate:new Date,mondayFirst:!0,templateType:"popup",showTodayButton:"true",modalHeaderColor:"bar-stable",modalFooterColor:"bar-stable",from:new Date,callback:function(val){datePickerCallback(val)},dateFormat:"dd-MM-yyyy",closeOnSelect:!1},$scope.reminder.time="null",$scope.groupInfo.group=LocalStorage.get("groupName"),$scope.groupInfo.group||($scope.groupInfo.group=""),$scope.changeGroup=function(){LocalStorage.set("groupName",$scope.groupInfo.group),$ionicPlatform.ready(function(){try{$cordovaToast.show("Group successfully changed!",toastOptions.duration,toastOptions.position).then(function(success){$cookies.remove("PHPSESSID")})}catch(e){}finally{$timeout(function(){window.location.href="#/app/today"},2e3)}})},$scope.addToCalendar=function(){var calOptions={};calOptions.calendarName="Lukkari app calendar",calOptions.calendarId=1,"null"!==$scope.reminder.time?calOptions.firstReminderMinutes=$scope.reminder.time:calOptions.firstReminderMinutes=null,calOptions.secondReminderMinutes=null;var success=!0;console.log("$scope.reminder.weeks: "+$scope.reminder.weeks),console.log("$scope.reminder.startDay: "+$scope.reminder.startDay);for(var i=1;i<$scope.reminder.weeks;i++);success?$cordovaToast.show("Calendar events successfully added!",toastOptions.duration,toastOptions.position):$cordovaToast.show("Failed to add calendar events!",toastOptions.duration,toastOptions.position)}}]),lukkariControllers.controller("SearchCtrl",["$scope","LocalStorage",function($scope,LocalStorage){}]);var lukkariDirectives=angular.module("lukkari.directives",[]);lukkariDirectives.directive("dayRange",function(){return{template:'{{lesson.startDay.toLocaleTimeString("fi-FI", {hour:"numeric", minute:"numeric"})}} â€” {{lesson.endDay.toLocaleTimeString("fi-FI", {hour:"numeric", minute:"numeric"})}}'}});var lukkariServices=angular.module("lukkari.services",[]);lukkariServices.factory("LocalStorage",[function(){function get(name){return window.localStorage.getItem(name)}function set(name,value){return window.localStorage.setItem(name,value)}return{get:get,set:set}}]),lukkariServices.factory("MyDate",[function(){function getMonday(d){d=new Date(d);var day=d.getDay(),diff=d.getDate()-day+(0===day?-6:1);return new Date(d.setDate(diff))}function formatDay(_ref){var day=_ref.day,years=_ref.years,dayString="";return dayString+=day.getDate(),dayString+=".",dayString+=day.getMonth()+1,"boolean"==typeof years&&years&&(dayString+=".",dayString+=day.getFullYear()),dayString}function getLocaleDate(_ref2){var day=_ref2.day,years=_ref2.years,options={month:"numeric",day:"numeric"};return"boolean"==typeof years&&years&&(options.year="numeric"),new Intl.DateTimeFormat("fi-FI",options).format(day)}function getDayFromDay(_ref3){var currentDay=_ref3.currentDay,offsetDays=_ref3.offsetDays,day=currentDay.getTime();day+=offsetDays*DAY_IN_MILLISECONDS;var date=new Date;return date.setTime(day),date}function getDayFromToday(offsetDays){var day=Date.now();return day+=offsetDays*DAY_IN_MILLISECONDS,new Date(day)}var DAY_IN_MILLISECONDS=864e5;return{getMonday:getMonday,formatDay:formatDay,getDayFromToday:getDayFromToday,getLocaleDate:getLocaleDate,getDayFromDay:getDayFromDay}}]),lukkariServices.factory("Lessons",["$http","ApiEndpoint",function($http,ApiEndpoint){function parseLesson(element,index,array){var lesson={};lesson.id=index,lesson.startDay=new Date(element.startDate),lesson.endDay=new Date(element.endDate),lesson.groups=[];var resources=element.resources;resources.forEach(function(resource,index,array){switch(resource.type){case"realization":lesson.code=resource.code,lesson.name=resource.name;break;case"room":lesson.room=resource.code;break;case"student_group":lesson.groups.push(resource.code)}}),lessons.push(lesson)}function get(callback){var data={studentGroup:[savedGroupName]},apiKey="Wu47zzKEPa7agvin47f5",url=ApiEndpoint.url+"/reservation/search?apiKey="+apiKey;$http({method:"POST",url:url,data:data,withCredentials:!0,headers:{authorization:"Basic V3U0N3p6S0VQYTdhZ3ZpbjQ3ZjU6","accept-language":"fi","content-type":"application/json","cache-control":"no-cache"}}).success(function(data,status,headers,config){console.log("success"),lessons=[],data.reservations.forEach(parseLesson),callback({success:!1})}).error(function(data,status,headers,config){console.log("failure"),callback({success:!1})})}function changeGroup(_ref4){var groupName=_ref4.groupName,callback=_ref4.callback;savedGroupName=groupName.toUpperCase(),get(function(result){callback(result)})}function getDay(_ref5){var callback=_ref5.callback,day=_ref5.day;if(!day||!day instanceof Date)console.error("Error in date!"),callback({success:!1});else{var dayLessons=[];lessons.forEach(function(lesson,index,array){var date=lesson.startDay;date.getDate()===day.getDate()&&date.getMonth()===day.getMonth()&&dayLessons.push(lesson)}),callback({success:!0,dayLessons:dayLessons})}}function getWeek(_ref6){_ref6.callback,_ref6.day}function getDayToDay(_ref7){_ref7.callback,_ref7.startDate,_ref7.endDate}var lessons=[],savedGroupName="";return{changeGroup:changeGroup,getDay:getDay,getWeek:getWeek,getDayToDay:getDayToDay}}]);