"use strict";var lukkariApp=angular.module("lukkari",["ionic","lukkari.controllers","lukkari.services","lukkari.directives","ionic-datepicker","ionic-material"]);lukkariApp.run(["$ionicPlatform",function($ionicPlatform){$ionicPlatform.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault()})}]),lukkariApp.constant("ApiEndpoint",{url:"http://localhost:8100/api"}),lukkariApp.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("app",{url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"LukkariCtrl"}).state("app.search",{url:"/search",views:{menuContent:{templateUrl:"templates/search.html",controller:"SearchCtrl"}}}).state("app.settings",{url:"/settings",views:{menuContent:{templateUrl:"templates/settings.html",controller:"SettingsCtrl"}}}).state("app.todayLesson",{url:"/today/:id",views:{menuContent:{templateUrl:"templates/lesson.html",controller:"LessonCtrl"}}}).state("app.today",{url:"/today",views:{menuContent:{templateUrl:"templates/today.html",controller:"TodayCtrl"}}}).state("app.lesson",{url:"/week/:id",views:{menuContent:{templateUrl:"templates/lesson.html",controller:"LessonCtrl"}}}).state("app.week",{url:"/week",views:{menuContent:{templateUrl:"templates/week.html",controller:"WeekCtrl"}}}),$urlRouterProvider.otherwise("/app/today")}]);var lukkariControllers=angular.module("lukkari.controllers",["ngCordova"]);lukkariControllers.controller("LukkariCtrl",[function($scope){}]),lukkariControllers.controller("TodayCtrl",["$scope","$ionicLoading","LocalStorage","$ionicModal","MyDate","Lessons","ionicMaterialInk","ionicMaterialMotion",function($scope,$ionicLoading,LocalStorage,$ionicModal,MyDate,Lessons,ionicMaterialInk,ionicMaterialMotion){function getAppointments(){$ionicLoading.show({template:"Loading..."}),Lessons.getDay({day:$scope.currentDay,callback:function(response){$ionicLoading.hide(),response.success?$scope.lessons=response.dayLessons:console.log("ERROR")}})}$scope.groupInfo={},$scope.groupInfo.group=LocalStorage.get("groupName"),$scope.currentDay=new Date,$ionicModal.fromTemplateUrl("templates/newgroup.html",{scope:$scope}).then(function(modal){$scope.modal=modal,$scope.groupInfo.group||$scope.modal.show()}),$scope.closeGroupName=function(){$scope.modal.hide()},$scope.setGroup=function(){LocalStorage.set("groupName",$scope.groupInfo.group),$scope.modal.hide(),Lessons.changeGroup({groupName:$scope.groupInfo.group,callback:function(success){success?getAppointments():console.log("failed to change group name")}})},$scope.lessons=[],void 0!==$scope.groupInfo.group&&Lessons.changeGroup({groupName:$scope.groupInfo.group,callback:function(success){success?getAppointments():console.log("failed to change group name")}}),$scope.moveDay=function(direction){$scope.currentDay=MyDate.getDayFromDay({currentDay:$scope.currentDay,offsetDays:direction}),getAppointments()}}]),lukkariControllers.controller("LessonCtrl",["$scope","$ionicLoading","$stateParams","Lessons",function($scope,$ionicLoading,$stateParams,Lessons){$scope.lesson=Lessons.getLesson($stateParams.id)}]),lukkariControllers.controller("WeekCtrl",["$scope","$ionicLoading","$ionicModal","LocalStorage","MyDate","Lessons",function($scope,$ionicLoading,$ionicModal,LocalStorage,MyDate,Lessons){function getAppointments(){$ionicLoading.show({template:"Loading..."}),Lessons.getWeek({day:$scope.currentDate,callback:function(response){if($ionicLoading.hide(),response.success){var allLessons=response.weekLessons;console.log(allLessons.length),$scope.days=[];for(var i=0;5>i;i++){var day={};day.date=MyDate.getDayFromDay({currentDay:$scope.currentDate,offsetDays:i}),day.lessons=[];for(var lessonsLength=allLessons.length,j=0;lessonsLength>j;j++){var lesson=allLessons[j];lesson.startDay.toDateString()===day.date.toDateString()&&day.lessons.push(lesson)}$scope.days.push(day)}}else console.log("ERROR")}}),$ionicLoading.hide()}$scope.groupInfo={},$scope.groupInfo.group=LocalStorage.get("groupName"),$scope.currentDate=MyDate.getMonday(new Date),$scope.endDate=MyDate.getDayFromDay({currentDay:$scope.currentDate,offsetDays:4}),$scope.groupInfo.group||$ionicModal.fromTemplateUrl("templates/newgroup.html",{scope:$scope}).then(function(modal){$scope.modal=modal,$scope.modal.show()}),$scope.closeGroupName=function(){$scope.modal.hide()},$scope.setGroup=function(){LocalStorage.set("groupName",$scope.groupInfo.group),$scope.modal.hide(),Lessons.changeGroup({groupName:$scope.groupInfo.group,callback:function(success){success?(console.log("successfully changed group name"),getAppointments()):console.log("failed to change group name")}})},$scope.lessons=[],void 0!==$scope.groupInfo.group&&Lessons.changeGroup({groupName:$scope.groupInfo.group,callback:function(success){success?(console.log("successfully changed group name"),getAppointments()):console.log("failed to change group name")}}),$scope.moveWeek=function(direction){$scope.currentDate=MyDate.getDayFromDay({currentDay:$scope.currentDate,offsetDays:7*direction}),$scope.endDate=MyDate.getDayFromDay({currentDay:$scope.currentDate,offsetDays:4}),getAppointments()}}]),lukkariControllers.controller("SettingsCtrl",["$scope","LocalStorage","$cordovaToast","$ionicPlatform","$timeout","$cordovaCalendar","Lessons","MyDate",function($scope,LocalStorage,$cordovaToast,$ionicPlatform,$timeout,$cordovaCalendar,Lessons,MyDate){function datePickerCallback(val){"undefined"==typeof val?console.log("No date selected"):(console.log("Selected date is : ",val),$scope.reminder.startDay=val,$scope.datepickerObject.inputDate=val)}function datePickerCallback2(val){"undefined"==typeof val?console.log("No date selected"):(console.log("Selected date is : ",val),$scope.reminder.endDay=val,$scope.datepickerObject2.inputDate=val)}$scope.groupInfo={},$scope.reminder={},$scope.reminder.startDay=new Date,$scope.reminder.endDay=new Date;var toastOptions={duration:"long",position:"center"};$scope.datepickerObject={titleLabel:"Select Start Date",todayLabel:"Today",closeLabel:"Close",setLabel:"Set",setButtonType:"button-positive",todayButtonType:"button-stable",closeButtonType:"button-stable",inputDate:$scope.reminder.startDay,mondayFirst:!0,templateType:"popup",showTodayButton:"true",modalHeaderColor:"bar-stable",modalFooterColor:"bar-stable",from:new Date,callback:function(val){datePickerCallback(val)},dateFormat:"dd-MM-yyyy",closeOnSelect:!0},$scope.datepickerObject2={titleLabel:"Select End Date",todayLabel:"Today",closeLabel:"Close",setLabel:"Set",setButtonType:"button-positive",todayButtonType:"button-stable",closeButtonType:"button-stable",inputDate:$scope.reminder.endDay,mondayFirst:!0,templateType:"popup",showTodayButton:"true",modalHeaderColor:"bar-stable",modalFooterColor:"bar-stable",from:new Date,callback:function(val){datePickerCallback2(val)},dateFormat:"dd-MM-yyyy",closeOnSelect:!0},$scope.reminder.time="null",$scope.groupInfo.group=LocalStorage.get("groupName"),$scope.groupInfo.group||($scope.groupInfo.group=""),$scope.changeGroup=function(){LocalStorage.set("groupName",$scope.groupInfo.group),$ionicPlatform.ready(function(){try{$cordovaToast.show("Group successfully changed!",toastOptions.duration,toastOptions.position)}catch(e){}finally{$timeout(function(){window.location.href="#/app/today"},2e3)}})},$scope.addToCalendar=function(){function createEvent(element,index,array){for(var groups="",i=0;i<element.groups.length;i++)groups+=element.groups[i]+", ";$cordovaCalendar.createEventWithOptions({title:element.name,location:element.room,notes:"Teacher(s): "+element.teacher+"\nGroup(s): "+groups+"\nCourse: "+element.code,startDate:element.startDay,endDate:element.endDay,firstReminderMinutes:calOptions.firstReminderMinutes,secondReminderMinutes:calOptions.secondReminderMinutes,calendarName:calOptions.calendarName,calendarId:calOptions.calendarId}).then(function(result){},function(err){success=!1})}var calOptions={};calOptions.calendarName="Lukkari app calendar",calOptions.calendarId=1,"null"!==$scope.reminder.time?calOptions.firstReminderMinutes=$scope.reminder.time:calOptions.firstReminderMinutes=null,calOptions.secondReminderMinutes=null;var success=!0;Lessons.getDayToDay({startDate:$scope.reminder.startDay,endDate:$scope.reminder.endDay,callback:function(response){$ionicPlatform.ready(function(){response.lessons.forEach(createEvent)})}});var msg="";msg=success?"Calendar events successfully added!":"Failed to add calendar events!",$cordovaToast.show(msg,toastOptions.duration,toastOptions.position),console.log(msg)}}]),lukkariControllers.controller("SearchCtrl",["$scope","LocalStorage",function($scope,LocalStorage){}]);var lukkariDirectives=angular.module("lukkari.directives",[]);lukkariDirectives.directive("timeRange",function(){return{template:'{{lesson.startDay.toLocaleTimeString("fi-FI", {hour:"numeric", minute:"numeric"})}} â€” {{lesson.endDay.toLocaleTimeString("fi-FI", {hour:"numeric", minute:"numeric"})}}'}}),lukkariDirectives.directive("date",function(){return{template:'{{day.date.toLocaleDateString("fi-FI", {weekday: "short", day: "numeric", month:"numeric"})}}'}});var lukkariServices=angular.module("lukkari.services",[]);lukkariServices.factory("LocalStorage",[function(){function get(name){return window.localStorage.getItem(name)}function set(name,value){return window.localStorage.setItem(name,value)}return{get:get,set:set}}]),lukkariServices.factory("MyDate",[function(){function getMonday(d){d=new Date(d);var day=d.getDay(),diff=d.getDate()-day+(0===day?-6:1);return new Date(d.setDate(diff))}function getLocaleDate(_ref){var day=_ref.day,years=_ref.years,options={month:"numeric",day:"numeric"};return"boolean"==typeof years&&years&&(options.year="numeric"),new Intl.DateTimeFormat("fi-FI",options).format(day)}function getDayFromDay(_ref2){var currentDay=_ref2.currentDay,offsetDays=_ref2.offsetDays,day=currentDay.getTime();day+=offsetDays*DAY_IN_MILLISECONDS;var date=new Date;return date.setTime(day),date}function getDayFromToday(offsetDays){var day=Date.now();return day+=offsetDays*DAY_IN_MILLISECONDS,new Date(day)}var DAY_IN_MILLISECONDS=864e5;return{getMonday:getMonday,getDayFromToday:getDayFromToday,getLocaleDate:getLocaleDate,getDayFromDay:getDayFromDay}}]),lukkariServices.factory("Lessons",["$http","ApiEndpoint","MyDate",function($http,ApiEndpoint,MyDate){function parseLesson(element,index,array){var lesson={};lesson.id=index,lesson.startDay=new Date(element.startDate),lesson.endDay=new Date(element.endDate),lesson.groups=[];var resources=element.resources;resources.forEach(function(resource,index,array){switch(resource.type){case"realization":lesson.code=resource.code,lesson.name=resource.name;break;case"room":lesson.room=resource.code,lesson.roomInfo=resource.parent.name;break;case"student_group":lesson.groups.push(resource.code)}}),lessons.push(lesson)}function get(callback){var data={studentGroup:[savedGroupName]},apiKey="Wu47zzKEPa7agvin47f5",url=ApiEndpoint.url+"/reservation/search?apiKey="+apiKey;$http({method:"POST",url:url,data:data,withCredentials:!0,headers:{authorization:"Basic V3U0N3p6S0VQYTdhZ3ZpbjQ3ZjU6","accept-language":"fi","content-type":"application/json","cache-control":"no-cache"}}).success(function(data,status,headers,config){console.log("success"),lessons=[],data.reservations.forEach(parseLesson),callback({success:!1})}).error(function(data,status,headers,config){console.log("failure"),callback({success:!1})})}function changeGroup(_ref3){var groupName=_ref3.groupName,callback=_ref3.callback;savedGroupName=groupName.toUpperCase(),get(function(result){callback(result)})}function getDay(_ref4){var callback=_ref4.callback,day=_ref4.day;if(!day||!day instanceof Date)console.error("Error in date!"),callback({success:!1});else{var dayLessons=[];lessons.forEach(function(lesson,index,array){var date=lesson.startDay;date.getDate()===day.getDate()&&date.getMonth()===day.getMonth()&&dayLessons.push(lesson)}),callback({success:!0,dayLessons:dayLessons})}}function getWeek(_ref5){var callback=_ref5.callback,day=_ref5.day,weekLessons=[],startDate=new Date(day.getFullYear(),day.getMonth(),day.getDate()),endDate=MyDate.getDayFromDay({currentDay:day,offsetDays:5});lessons.forEach(function(lesson,index,array){lesson.startDay>=startDate&&lesson.startDay<=endDate&&weekLessons.push(lesson)}),callback({success:!0,weekLessons:weekLessons})}function getDayToDay(_ref6){var callback=_ref6.callback,startDate=_ref6.startDate,endDate=_ref6.endDate,correctEndDate=MyDate.getDayFromDay({currentDay:endDate,offsetDays:1}),retLessons=[];lessons.forEach(function(lesson,index,array){lesson.startDay>=startDate&&lesson.startDay<=correctEndDate&&retLessons.push(lesson)}),callback({success:!0,lessons:retLessons})}function getLesson(id){return lessons[id]}var lessons=[],savedGroupName="";return{changeGroup:changeGroup,getDay:getDay,getWeek:getWeek,getDayToDay:getDayToDay,getLesson:getLesson}}]);
//# sourceMappingURL=bundle.min.js.map
