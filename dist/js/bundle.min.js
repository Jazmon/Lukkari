"use strict";angular.module("jm.i18next").config(["$i18nextProvider",function($i18nextProvider){$i18nextProvider.options={useCookie:!1,useLocalStorage:!0,fallbackLng:"dev",resGetPath:"../locales/__lng__/__ns__.json",defaultLoadingValue:""}}]),angular.module("lukkari",["ionic","lukkari.controllers","lukkari.services","lukkari.directives","ionic-datepicker","ionic-material","angularXml2json","jm.i18next"]).run(["$ionicPlatform",function($ionicPlatform){$ionicPlatform.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault()})}]).constant("ApiEndpoint",{url:"http://localhost:8100/api"}).constant("LunchEndPoint",{url:"http://localhost:8100/lunch"}).constant("ApiKey",{key:"Wu47zzKEPa7agvin47f5"}).config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("app",{url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"LukkariCtrl"}).state("app.search",{url:"/search",views:{menuContent:{templateUrl:"templates/search.html",controller:"SearchCtrl"}}}).state("app.realization",{url:"/search/:code",views:{menuContent:{templateUrl:"templates/realization.html",controller:"RealizationCtrl"}}}).state("app.settings",{url:"/settings",views:{menuContent:{templateUrl:"templates/settings.html",controller:"SettingsCtrl"}}}).state("app.todayLesson",{url:"/today/:id",views:{menuContent:{templateUrl:"templates/lesson.html",controller:"LessonCtrl"}}}).state("app.today",{url:"/today",views:{menuContent:{templateUrl:"templates/today.html",controller:"TodayCtrl"}}}).state("app.lesson",{url:"/week/:id",views:{menuContent:{templateUrl:"templates/lesson.html",controller:"LessonCtrl"}}}).state("app.week",{url:"/week",views:{menuContent:{templateUrl:"templates/week.html",controller:"WeekCtrl"}}}).state("app.lunch",{url:"/lunch",views:{menuContent:{templateUrl:"templates/lunch.html",controller:"LunchCtrl"}}}),$urlRouterProvider.otherwise("/app/today")}]),angular.module("lukkari.services",[]),angular.module("lukkari.controllers",["ngCordova"]),angular.module("lukkari.directives",[]),angular.module("lukkari.services").factory("FoodService",["$http","LunchEndPoint","ngXml2json",function($http,LunchEndPoint,ngXml2json){function parseLunch(element,index,array){var lunch={main:element.div[0].div.div.content};element.div.length>=2&&(lunch.side=element.div[1].div.div.content),element.div.length>=3&&(lunch.allergy=element.div[2].div.div.content),lunches.push(lunch)}function get(_ref){var callback=_ref.callback;lunches.length>0?callback(lunches):$http({method:"GET",url:["https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%","20html%20where%20url%3D%22http%3A%2F%2Fwww.campusravita.fi%2Fi","ntra_menu_today.php%22%20and%0A%20%20%20%20%20%20xpath%3D'%2F","%2Fdiv%5B%40class%3D%22rivitys-intra%22%5D'&format=json&diagn","ostics=true&callback="].join("")}).then(function(response){if(null===response.data.query.results)callback(lunches);else{var data=response.data.query.results.div;data.forEach(parseLunch),callback(lunches)}},function(response){})}var lunches=[];return{get:get}}]),angular.module("lukkari.services").factory("Lessons",["$http","ApiEndpoint","MyDate","ApiKey",function($http,ApiEndpoint,MyDate,ApiKey){function parseLesson(element,index,array){var lesson={};lesson.id=index,lesson.startDay=new Date(element.startDate),lesson.endDay=new Date(element.endDate),lesson.groups=[];var resources=element.resources;resources.forEach(function(resource,index,array){switch(resource.type){case"realization":lesson.code=resource.code,lesson.name=resource.name;break;case"room":lesson.room=resource.code,lesson.roomInfo=resource.parent.name;break;case"student_group":lesson.groups.push(resource.code)}}),lessons.push(lesson)}function get(callback){var data={studentGroup:[savedGroupName]},url=[ApiEndpoint.url,"/reservation/search","?apiKey=",ApiKey.key].join(""),lang="en";navigator.language.includes("fi")&&(lang="fi"),$http({method:"POST",url:url,data:data,withCredentials:!0,headers:{authorization:"Basic V3U0N3p6S0VQYTdhZ3ZpbjQ3ZjU6","accept-language":lang,"content-type":"application/json","cache-control":"no-cache"}}).success(function(data,status,headers,config){lessons=[],data.reservations.forEach(parseLesson),callback({success:!1})}).error(function(data,status,headers,config){console.error("Failed to get lesson data!"),callback({success:!1})})}function changeGroup(_ref){var groupName=_ref.groupName,callback=_ref.callback;savedGroupName=groupName.toUpperCase(),get(function(result){return callback(result)})}function getDay(_ref2){var callback=_ref2.callback,day=_ref2.day;!day||!day instanceof Date?(console.error("Error in date!"),callback({success:!1})):!function(){var checkDay=function(lesson,index,array){var date=lesson.startDay;date.getDate()===day.getDate()&&date.getMonth()===day.getMonth()&&dayLessons.push(lesson)},dayLessons=[];lessons.forEach(checkDay),callback({success:!0,dayLessons:dayLessons})}()}function getWeek(_ref3){function checkLessonDate(lesson,index,array){lesson.startDay>=startDate&&lesson.startDay<=endDate&&weekLessons.push(lesson)}var callback=_ref3.callback,day=_ref3.day,weekLessons=[],startDate=new Date(day.getFullYear(),day.getMonth(),day.getDate()),endDate=MyDate.getDayFromDay({currentDay:day,offsetDays:5});lessons.forEach(checkLessonDate),callback({success:!0,weekLessons:weekLessons})}function getDayToDay(_ref4){function checkLesson(lesson,index,array){lesson.startDay>=startDate&&lesson.startDay<=correctEndDate&&retLessons.push(lesson)}var callback=_ref4.callback,startDate=_ref4.startDate,endDate=_ref4.endDate,correctEndDate=MyDate.getDayFromDay({currentDay:endDate,offsetDays:1}),retLessons=[];lessons.forEach(checkLesson),callback({success:!0,lessons:retLessons})}function getLesson(id){return lessons[id]}var lessons=[],savedGroupName=void 0;return{changeGroup:changeGroup,getDay:getDay,getWeek:getWeek,getDayToDay:getDayToDay,getLesson:getLesson}}]),angular.module("lukkari.services").factory("LocalStorage",[function(){function get(_ref){var key=_ref.key;return window.localStorage.getItem(key)}function set(_ref2){var key=_ref2.key,value=_ref2.value;return window.localStorage.setItem(key,value)}return{get:get,set:set}}]),angular.module("lukkari.services").factory("MyDate",[function(){function getMonday(d){d=new Date(d);var day=d.getDay(),diff=d.getDate()-day+(0===day?-6:1);return new Date(d.setDate(diff))}function getLocaleDate(_ref){var day=_ref.day,years=_ref.years,weekday=_ref.weekday,options={month:"numeric",day:"numeric"};return options.year=years?"numeric":void 0,options.weekday=weekday?"long":void 0,new Intl.DateTimeFormat("fi-FI",options).format(day)}function getDayFromDay(_ref2){var currentDay=_ref2.currentDay,offsetDays=_ref2.offsetDays,day=currentDay.getTime()+offsetDays*DAY_IN_MILLISECONDS,date=new Date;return date.setTime(day),date}function getDayFromToday(offsetDays){return getDayFromDay({currentDay:new Date,offsetDays:offsetDays})}function offsetDate(_ref3){var date=_ref3.date,minutes=_ref3.minutes,hours=_ref3.hours,seconds=_ref3.seconds,d=date;return hours&&d.setHours(date.getHours()+hours),minutes&&d.setMinutes(date.getMinutes()+minutes),seconds&&d.setSeconds(date.getSeconds()+seconds),d}var DAY_IN_MILLISECONDS=864e5;return{getMonday:getMonday,getDayFromToday:getDayFromToday,getLocaleDate:getLocaleDate,getDayFromDay:getDayFromDay,offsetDate:offsetDate}}]),angular.module("lukkari.services").factory("Notifications",["LocalStorage","$ionicPlatform","$cordovaLocalNotification","Lessons","MyDate",function(LocalStorage,$ionicPlatform,$cordovaLocalNotification,Lessons,MyDate){function useNotifications(_ref){var use=_ref.use,timeOffset=_ref.timeOffset,notificationIds=JSON.parse(LocalStorage.get({key:"notifications"}));$ionicPlatform.ready(function(){use?($cordovaLocalNotification.cancelAll().then(function(result){return console.log(result)}),Lessons.getWeek({day:new Date,callback:function(response){var lessons=response.weekLessons;lessons.forEach(function(lesson){var id=void 0;notificationIds?id=notificationIds[notificationIds.length-1]+1:(id=0,notificationIds=[]),notificationIds.push(id),LocalStorage.set({key:"notifications",value:JSON.stringify(notificationIds)}),$cordovaLocalNotification.schedule({id:id,title:lesson.name,text:[lesson.room,", ",lesson.startDay.toLocaleTimeString("fi-FI",{hour:"numeric",minute:"numeric"})," - ",lesson.endDay.toLocaleTimeString("fi-FI",{hour:"numeric",minute:"numeric"})].join(""),at:MyDate.offsetDate({date:lesson.startDay,minutes:timeOffset})}).then(function(result){return console.log("SUCCESS: "+result)})})}}),LocalStorage.set({key:"useNotification",value:"true"})):(console.log("Removing all notifications"),$cordovaLocalNotification.cancelAll().then(function(result){return console.log(result)}),LocalStorage.set({key:"useNotification",value:"false"}))})}return{useNotifications:useNotifications}}]),angular.module("lukkari.services").factory("Search",["$http","ApiEndpoint","ApiKey",function($http,ApiEndpoint,ApiKey){function search(_ref){var name=_ref.name,studentGroups=_ref.studentGroups,startDate=_ref.startDate,endDate=_ref.endDate,codes=_ref.codes,successCallback=_ref.successCallback,errorCallback=_ref.errorCallback,url=[ApiEndpoint.url,"/realization/search","?apiKey=",ApiKey.key].join(""),data={};void 0!==name&&(data.name=name),void 0!==studentGroups&&(data.studentGroups=studentGroups),void 0!==startDate&&(data.startDate=startDate),void 0!==endDate&&(data.endDate=endDate),void 0!==codes&&(data.codes=codes);var lang="en";navigator.language.includes("fi")&&(lang="fi"),$http({method:"POST",url:url,data:data,withCredentials:!0,headers:{authorization:"Basic V3U0N3p6S0VQYTdhZ3ZpbjQ3ZjU6","accept-language":lang,"content-type":"application/json","cache-control":"no-cache"}}).success(function(data,status,headers,config){successCallback(data)}).error(function(data,status,headers,config){errorCallback(status)})}return{search:search}}]),angular.module("lukkari.directives").directive("date",function(){return{template:['{{day.date.toLocaleDateString("fi-FI",',' {weekday: "short", day: "numeric", month:"numeric"})}}'].join("")}}),angular.module("lukkari.directives").directive("ngLastRepeat",function($timeout){return{restrict:"A",link:function(scope,element,attr){scope.$last===!0&&$timeout(function(){return scope.$emit("ngLastRepeat"+(attr.ngLastRepeat?"."+attr.ngLastRepeat:""))})}}}),angular.module("lukkari.directives").directive("timeRange",function(){return{template:["{{lesson.startDay.toLocaleTimeString",'("fi-FI", {hour:"numeric", minute:"numeric"})}}'," — {{lesson.endDay.toLocaleTimeString",'("fi-FI", {hour:"numeric", minute:"numeric"})}}'].join("")}}),angular.module("lukkari.controllers").controller("LessonCtrl",["$scope","$ionicLoading","$stateParams","Lessons","ionicMaterialInk","ionicMaterialMotion",function($scope,$ionicLoading,$stateParams,Lessons,ionicMaterialInk){$scope.lesson=Lessons.getLesson($stateParams.id),ionicMaterialInk.displayEffect()}]),angular.module("lukkari.controllers").controller("LukkariCtrl",["$scope",function($scope){}]),angular.module("lukkari.controllers").controller("LunchCtrl",["$scope","FoodService","ionicMaterialInk","ionicMaterialMotion","$ionicLoading",function($scope,FoodService,ionicMaterialInk,ionicMaterialMotion,$ionicLoading){$ionicLoading.show({templateUrl:"templates/loading.html"}),FoodService.get({callback:function(lunches){$scope.lunches=lunches,$ionicLoading.hide()}}),$scope.$on("ngLastRepeat.myList",function(e){ionicMaterialMotion.ripple()}),ionicMaterialInk.displayEffect()}]),angular.module("lukkari.controllers").controller("RealizationCtrl",["$scope","$ionicLoading","$stateParams","Search","ionicMaterialInk","ionicMaterialMotion",function($scope,$ionicLoading,$stateParams,Search,ionicMaterialInk){var searchParams={codes:[$stateParams.code],successCallback:function(data){console.log(data.realizations[0]),$scope.realization=data.realizations[0],$scope.realization.startDate=new Date($scope.realization.startDate),$scope.realization.endDate=new Date($scope.realization.endDate),$scope.realization.enrollmentStart=new Date($scope.realization.enrollmentStart),$scope.realization.enrollmentEnd=new Date($scope.realization.enrollmentEnd)},errorCallback:function(status){return console.log(status)}};$scope.realization=Search.search(searchParams),ionicMaterialInk.displayEffect()}]),angular.module("lukkari.controllers").controller("SearchCtrl",["$scope","LocalStorage","Search","$ionicLoading","$ionicModal","ionicMaterialInk","ionicMaterialMotion",function($scope,LocalStorage,Search,$ionicLoading,$ionicModal,ionicMaterialInk,ionicMaterialMotion){$scope.searchParams={successCallback:function(data){console.log(data),data.realizations.length<1e3?($scope.realizations=data.realizations,$scope.realizations.forEach(function(element){element.startDate=new Date(element.startDate),element.endDate=new Date(element.endDate)})):console.log("Please enter some search parameters!"),$ionicLoading.hide()},errorCallback:function(status){return console.log(status)}},$ionicModal.fromTemplateUrl("templates/searchModal.html",{scope:$scope}).then(function(modal){return $scope.modal=modal}),$scope.close=function(){return $scope.modal.hide()},$scope.openSearch=function(){return $scope.modal.show()},$scope.search=function(){$scope.modal.hide(),$ionicLoading.show({templateUrl:"templates/loading.html"}),void 0!==$scope.searchParams.code&&null!==$scope.searchParams.code&&($scope.searchParams.codes=[$scope.searchParams.code]),void 0!==$scope.searchParams.studentGroup&&null!==$scope.searchParams.studentGroup&&""!==$scope.searchParams.studentGroup&&($scope.searchParams.studentGroups=[$scope.searchParams.studentGroup.toUpperCase()]),Search.search($scope.searchParams)},$scope.$on("ngLastRepeat.myList",function(e){return ionicMaterialMotion.blinds()}),ionicMaterialInk.displayEffect()}]),angular.module("lukkari.controllers").controller("SettingsCtrl",["$scope","LocalStorage","$cordovaToast","$ionicPlatform","$timeout","$cordovaCalendar","Lessons","MyDate","ionicMaterialInk","ionicMaterialMotion","$cordovaLocalNotification","Notifications",function($scope,LocalStorage,$cordovaToast,$ionicPlatform,$timeout,$cordovaCalendar,Lessons,MyDate,ionicMaterialInk,ionicMaterialMotion,$cordovaLocalNotification,Notifications){$scope.groupInfo={group:LocalStorage.get({key:"groupName"})},$scope.groupInfo.group||($scope.groupInfo.group=""),$scope.reminder={startDay:new Date,endDay:new Date,time:"null"},$scope.notification={use:LocalStorage.get({key:"useNotification"}),time:null},$scope.notification.use||($scope.notification.use=!1);var toastOptions={duration:"long",position:"center"};$scope.datepickerObject={titleLabel:"Select Start Date",todayLabel:"Today",closeLabel:'<span class="icon ion-android-close"></span>',setLabel:'<span class="icon ion-android-done"></span>',setButtonType:"button-positive",todayButtonType:"button-stable",closeButtonType:"button-assertive",inputDate:$scope.reminder.startDay,mondayFirst:!0,templateType:"popup",showTodayButton:"true",modalHeaderColor:"bar-stable",modalFooterColor:"bar-stable",from:new Date,callback:function(val){"undefined"==typeof val||($scope.reminder.startDay=val,$scope.datepickerObject.inputDate=val)},dateFormat:"dd-MM-yyyy",closeOnSelect:!0},$scope.datepickerObject2={titleLabel:"Select End Date",todayLabel:"Today",closeLabel:'<span class="icon ion-android-close"></span>',setLabel:'<span class="icon ion-android-done"></span>',setButtonType:"button-positive",todayButtonType:"button-stable",closeButtonType:"button-assertive",inputDate:$scope.reminder.endDay,mondayFirst:!0,templateType:"popup",showTodayButton:!1,modalHeaderColor:"bar-positive",modalFooterColor:"bar-positive",from:new Date,callback:function(val){"undefined"==typeof val||($scope.reminder.endDay=val,$scope.datepickerObject2.inputDate=val)},dateFormat:"dd-MM-yyyy",closeOnSelect:!0},$scope.changeGroup=function(){LocalStorage.set({key:"groupName",value:$scope.groupInfo.group}),$ionicPlatform.ready(function(){$cordovaToast.show("Group successfully changed!",toastOptions.duration,toastOptions.position),$timeout(function(){return window.location.href="#/app/today"},2e3)})},$scope.setNotification=function(){Notifications.useNotifications({use:$scope.notification.use,timeOffset:-$scope.notification.time})},$scope.addToCalendar=function(){function createEvent(element,index,array){for(var groups="",i=0;i<element.groups.length;i++)groups+=element.groups[i]+", ";$cordovaCalendar.createEventWithOptions({title:element.name,location:element.room,notes:"Teacher(s): "+element.teacher+"\nGroup(s): "+groups+"\nCourse: "+element.code,startDate:element.startDay,endDate:element.endDay,firstReminderMinutes:calOptions.firstReminderMinutes,secondReminderMinutes:calOptions.secondReminderMinutes,calendarName:calOptions.calendarName,calendarId:calOptions.calendarId}).then(function(result){},function(err){success=!1})}var calOptions={calendarName:"Lukkari app calendar",calendarId:1};"null"!==$scope.reminder.time?calOptions.firstReminderMinutes=$scope.reminder.time:calOptions.firstReminderMinutes=null,calOptions.secondReminderMinutes=null;var success=!0;Lessons.getDayToDay({startDate:$scope.reminder.startDay,endDate:$scope.reminder.endDay,callback:function(response){$ionicPlatform.ready(function(){return response.lessons.forEach(createEvent)})}});var msg="";msg=success?"Calendar events successfully added!":"Failed to add calendar events!",$cordovaToast.show(msg,toastOptions.duration,toastOptions.position),console.log(msg)},ionicMaterialMotion.ripple(),ionicMaterialInk.displayEffect()}]),angular.module("lukkari.controllers").controller("TodayCtrl",["$scope","$ionicLoading","LocalStorage","$ionicModal","MyDate","Lessons","ionicMaterialInk","ionicMaterialMotion","Notifications",function($scope,$ionicLoading,LocalStorage,$ionicModal,MyDate,Lessons,ionicMaterialInk,ionicMaterialMotion,Notifications){function getAppointments(){$ionicLoading.show({templateUrl:"templates/loading.html"}),Lessons.getDay({day:$scope.currentDay,callback:function(response){$ionicLoading.hide(),response.success?$scope.lessons=response.dayLessons:console.error("ERROR")}})}$scope.groupInfo={group:LocalStorage.get({key:"groupName"})},$scope.currentDay=new Date;var useNotifications=LocalStorage.get({key:"useNotification"});1==useNotifications&&(console.log("setting notifications"),Notifications.useNotifications({use:$scope.notification.use,timeOffset:-$scope.notification.time})),$ionicModal.fromTemplateUrl("templates/newgroup.html",{scope:$scope}).then(function(modal){$scope.modal=modal,$scope.groupInfo.group||$scope.modal.show()}),$scope.closeGroupName=function(){return $scope.modal.hide()},$scope.$on("ngLastRepeat.myList",function(e){return ionicMaterialMotion.blinds()}),$scope.setGroup=function(){LocalStorage.set({key:"groupName",value:$scope.groupInfo.group}),$scope.modal.hide(),Lessons.changeGroup({groupName:$scope.groupInfo.group,callback:function(success){return success?getAppointments():console.error("failed to change group name")}})},$scope.lessons=[],void 0!==$scope.groupInfo.group&&null!==$scope.groupInfo.group&&Lessons.changeGroup({groupName:$scope.groupInfo.group,callback:function(success){return success?getAppointments():console.error("failed to change group name")}}),$scope.moveDay=function(direction){$scope.currentDay=MyDate.getDayFromDay({currentDay:$scope.currentDay,offsetDays:direction}),getAppointments()},ionicMaterialInk.displayEffect()}]),angular.module("lukkari.controllers").controller("WeekCtrl",["$scope","$ionicLoading","$ionicModal","LocalStorage","MyDate","Lessons","ionicMaterialInk","ionicMaterialMotion",function($scope,$ionicLoading,$ionicModal,LocalStorage,MyDate,Lessons,ionicMaterialInk,ionicMaterialMotion){function getAppointments(){$ionicLoading.show({templateUrl:"templates/loading.html"}),Lessons.getWeek({day:$scope.currentDate,callback:function(response){if($ionicLoading.hide(),response.success){var allLessons=response.weekLessons;$scope.days=[];for(var i=0;5>i;i++){var day={};day.date=MyDate.getDayFromDay({currentDay:$scope.currentDate,offsetDays:i}),day.lessons=[];for(var lessonsLength=allLessons.length,j=0;lessonsLength>j;j++){var lesson=allLessons[j];lesson.startDay.toDateString()===day.date.toDateString()&&day.lessons.push(lesson)}$scope.days.push(day)}}else console.error("ERROR")}}),$ionicLoading.hide()}$scope.groupInfo={group:LocalStorage.get({key:"groupName"})},$scope.currentDate=MyDate.getMonday(new Date),$scope.endDate=MyDate.getDayFromDay({currentDay:$scope.currentDate,offsetDays:4}),$scope.groupInfo.group||$ionicModal.fromTemplateUrl("templates/newgroup.html",{scope:$scope}).then(function(modal){$scope.modal=modal,$scope.modal.show()}),$scope.closeGroupName=function(){return $scope.modal.hide()},$scope.$on("ngLastRepeat.myList",function(e){return ionicMaterialMotion.ripple()}),$scope.setGroup=function(){LocalStorage.set({key:"groupName",value:$scope.groupInfo.group}),$scope.modal.hide(),Lessons.changeGroup({groupName:$scope.groupInfo.group,callback:function(success){return success?getAppointments():console.error("failed to change group name")}})},$scope.lessons=[],void 0!==$scope.groupInfo.group&&Lessons.changeGroup({groupName:$scope.groupInfo.group,callback:function(success){return success?getAppointments():console.error("failed to change group name")}}),$scope.moveWeek=function(direction){$scope.currentDate=MyDate.getDayFromDay({currentDay:$scope.currentDate,offsetDays:7*direction}),$scope.endDate=MyDate.getDayFromDay({currentDay:$scope.currentDate,offsetDays:4}),getAppointments()},ionicMaterialInk.displayEffect()}]);
//# sourceMappingURL=bundle.min.js.map
